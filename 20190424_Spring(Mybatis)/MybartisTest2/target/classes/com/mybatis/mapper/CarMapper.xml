<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 
	PersonMapper.xml 파일에 SQL 쿼리문을 작성한다
	짝꿍 자바코드와 매핑한다.
 -->
 
 <mapper namespace="com.dao.CarDAO">  <!-- 매핑할 인터페이스 파일을 지정 -->
 	
 	<!-- type Person 객체를 사용해서 리턴, property: 클래스의 변수명, column : 테이블의 컬럼명 -->
 	<resultMap type="Car" id="result">
 		<result property="id" column="id"/>
 		<result property="name" column="name"/>
 		<result property="manufacture" column="manufacture"/>
 		<result property="price" column="price"/>
 	</resultMap>
 	
 <!-- resultMap 리턴값을 처리할 방법을 의미 -->
 <!-- resultType="Person" VO타입, 리턴값을 처리할 방법으로 객체에서 알아서 넣어줌, resultMap 정의하지 않아도 된다. 
 				property: 클래스의 변수명, column: 테이블의 컬럼명이 동일 할 경우에만 가능.-->
 	
 	<select id="selectAll" resultType="Car">
 			SELECT * FROM cars
 	</select>

 	<select id="select" parameterType="int" resultMap="result">
 			SELECT * FROM cars WHERE id = #{id}
 	</select>
 
 	<select id="selectName" parameterType="String" resultMap="result">
 			SELECT * FROM cars WHERE name = #{name}
 	</select>
 	
 	<select id="selectPrice" parameterType="int" resultMap="result">
 			SELECT * FROM cars WHERE price >= #{price}
 	</select>
 	
 <!-- id : 메서드명, parameterType 매개변수명, 1개만 지정 가능,
  useGeeratedKeys : autoIncreament 테이블에서 컬럼 선언시 autoIncreament를 지정한 경우에만 동작함.
  keyProperty는 설정을하면 값을 다시 담아갈 수 있다  -->
 	<insert id="insert" parameterType="Car"
 		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO cars (name, manufacture, price) VALUES (#{name},#{manufacture},#{price})
 	</insert>
 	
 	<update id="update" parameterType="Car">
 		UPDATE cars 
 		SET 
 		name = #{name},
 		manufacture = #{manufacture},
 		price = #{price}
 		WHERE id = ${id}
 	</update>
 	
 	<delete id="delete" parameterType="int">
 		DELETE FROM cars WHERE id = #{id}
 	</delete>
 </mapper>