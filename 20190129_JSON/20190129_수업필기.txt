Dom parser -> 트리 구조로 되어 있음. XML문서 전체가 메모리에 올라와야 함.
SAX방식보다 메모리 부담이 크다. 

Dom Tree의 XML전체를 가리키는 가상의 포인터인 document
Dom Tree 구성하는 하나하나를 Node라고 칭함.

getNextSibling()을 이용하여 아래 노드들을 추출할 수 있다.

사건 처리 메소드
1. ActionListener 추가. 마우스 클릭시만 사용 할 것이면 MouseAdapter를
extends하면 됨. 
원칙적으로 MouseListner를 implements하여야 하나, 사용하지 않는
메소드까지 추가 됨. 

2. 사건 발생 대상에 addActionListner(this) 등록

3. 사건 발생 메소드를 구현.

------------------------------------
JSON (JavaScript Object Notation)
텍스트 기반의 경량 데이터 변환 포멧. 사용자의 읽고 쓰기가 쉬움.
프로그래밍 언어에 독립적인 text형식으로 이기종간 데이터 교환에 적합.
배열구조로 되어있음. 각 데이터들은 ' , ' 표기로 구분
시작을 대괄호로, 스트링 구조는 중괄호로 표기함.
XML의 태그가 JSON에서는 중괄호인 차이가 있음.

1. 파일을 읽어옴.
BufferedReader br = new BufferedReader(new FileReader("json/school.json"));
2. Parser 생성.
JsonParser parser = new JsonParser();
3. Parsing한 Object 저장
JsonObject obj = parser.parse(br).getAsJasonArray("record")
4. JsonObject를 추출하기 위해 JsonArray 순회하면서 get으로 추출.